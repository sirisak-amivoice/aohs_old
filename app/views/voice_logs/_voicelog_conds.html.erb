
<%= javascript_src_path('/jquery/jquery.autocomplete/jquery.autocomplete.js') %>
<%= stylesheet_src_path('/jquery/jquery.autocomplete/jquery.autocomplete.css') %>

<% content_for :header do %>
    
    <style type="text/css">
		  #btnSearch, #btnClear { padding:4px; padding-left:6px; padding-right:6px; }
      legend,#vcPeriods,#vcFromDate,#vcFromTime,#vcToDate,#vcToTime,#vcExt,.vcCD,#vcDuraCond,#vcLengthStart,#vcLengthEnd,.label-frm,#vcCaller,#vcDialed {
          font-size:11px;
      }
      input {
          margin-top:0px;
          margin-bottom:0px;
      }
      #vcPeriods {
          width:190px;
      }
      #vcFromDate,#vcToDate {
          width:101px;
      }
      #vcFromTime,#vcToTime {
          width:65px;
      }
      #vcCaller,#vcDialed {
          width:66px;
      }
      #vcExt {
          width:37px;
      }
      #tab-conds {
          margin-top:3px;
      }
      #tab-tree {
          margin-top:2px;
      }
      #vcLengthStart,#vcLengthEnd {
          width:45px;
				  text-align:center;
					padding:1px;
      }
      #vcDuraCond {
          width:45px;
					padding:1px;
      }
	  #keyword_name {
	  	  width:188px;
				padding:1px;
	  }
	  #vcTransfCountTo,#vcTransfCountFr {
	    width:45px;
		  text-align:center;
			padding:1px;
	  }
		#agent_name {
				width: 188px;
				padding:1px;
		}
      .div-line {
        padding-top:0px;
        padding-bottom:0px;
        padding-left:0px;
        padding-right:0px; 

        margin-top:2px;
        margin-bottom:2px;
        width:188px;
        height:1px;
        font-size:0px;  
      }
      #agent_tree {
          overflow:scroll;
          width:190px;
          background:#ffffff;
          border:1px solid #cccccc;
      }
      .frm-note {
          font-size:10px;
          color: #666666;
      }
      .btnConditions,.btnStyle1 {
          border:1px solid #ffffff;
          background-color: transparent;
          background-repeat:repeat;
		  font-weight:bold;
		  color:#ffffff;
		  padding:2px;
          background-image:url('<%=image_src_path('/images/greenbtn.png') %>');
      }
      .condName1 {
          font-size:11px;
          display:block;
          margin-top:2px;
		  margin-bottom:1px;
		  font-weight:700;
		  color:#5b5b5b;
      }
	  #vcFromDate,#vcToDate {
	  	  background-repeat:no-repeat;
		  background-position:right;
	  	  background-image:url('<%=image_src_path('/images/calendar.png') %>');
	  }
      #custom-periods { margin-left:8px;}
      #div-button { border-bottom:1px solid #c7c6c6; padding-bottom:3px;}
	  .ui-button-text {
	  	padding:0px;
		margin:0px;
		margin-bottom:-3px;
		margin-top:-2px;
	  }
    </style>
	    
    <script type="text/javascript">

      var searchKey = {
        keys: "",
        periods: "",
        stdate: "",
        sttime: "",
        eddate: "",
        edtime: "",
        ext: "",
        calld: "",
        stdu: "",
        eddu: "",
        dur: "",
        caller:"",
        dialed:"",
				keyword: "",
				trfc: "no",
        agents: "none",
        groups: "none",
				with_trnf: "false"
      }

      function isBlank(variable){
          if(variable == null){
              return true;
          } else if(variable.length <= 0){
              return true;
          } else {
              return false;
          }
      }

      function getSearchKeys(){

		  var xagents = $("#tvOfAgents").val();
		  var xgroups = $("#tvOfGroups").val();
		  var skipMsg = true;
		  
		  var a = isBlank(xagents);
		  var b = isBlank(xgroups);
          
          searchKey.keys = "agents=none";
          if(!a){
             searchKey.keys = "agents=" + xagents;             
          }
          searchKey.keys += "__groups=none";
          if(!b){
		  	searchKey.keys += "__groups=" + xgroups;
		  }
		  
          var periods = $("#vcPeriods option:selected").val();
          if(periods != null){
              searchKey.periods = periods;
          } else {
              searchKey.periods = ""
          }

          var stdate = jQuery.trim($("input[name=vcFromDate]").val());
          if(!isBlank(stdate)){
              searchKey.stdate = stdate;
          } else {
              searchKey.stdate = "";
          }

          var sttime = jQuery.trim($("input[name=vcFromTime]").val());
          if(!isBlank(sttime)){
              searchKey.sttime = sttime;
          } else {
              searchKey.sttime = "";
          }

          var eddate = jQuery.trim($("input[name=vcToDate]").val());
          if(!isBlank(eddate)){
              searchKey.eddate = eddate;
          } else {
              searchKey.eddate = "";
          }

          var edtime = jQuery.trim($("input[name=vcToTime]").val());
          if(!isBlank(edtime)){
              searchKey.edtime = edtime;
          } else {
              searchKey.edtime = "";
          }

          var extno = jQuery.trim($("input[name=vcExt]").val());
          if(!isBlank(extno)){
              searchKey.ext = extno;
          } else {
              searchKey.ext = "";
          }

          var agent_id = jQuery.trim($("input[name=agent_id]").val());  // nkm
          var agent_name = jQuery.trim($("input[name=agent_name]").val());  // nkm
          if(!isBlank(agent_id)&&!isBlank(agent_name)){
              searchKey.agent_id = agent_id;
          } else {
              searchKey.agent_id = "";
          }

          var callerNo = jQuery.trim($("input[name=vcCaller]").val());
          if(!isBlank(callerNo)){
		  	  if(callerNo.length >= 4){
			  	searchKey.caller = callerNo;
			  } else {
			  	skipMsg = "Caller number must be require at least four digits.";
			  }
          }else{
              searchKey.caller = "";
          }
          var dialedNo = jQuery.trim($("input[name=vcDialed]").val());
          if(!isBlank(dialedNo)){
		  	if(dialedNo.length >= 4){
				searchKey.dialed = dialedNo;
			} else {
				skipMsg = "Dialed number must be require at least four digits.";
			}
          }else{
              searchKey.dialed = "";
          }

		  var keyword = jQuery.trim($("input[name=keyword_name]").val());
		  if(!isBlank(keyword)){
		  	if(keyword.length >= 3){
				searchKey.keyword = keyword;
			} else {
				skipMsg = "Keyword's name must be require at least three charactors.";
			}
		  } else {
		  	  searchKey.keyword = "";
		  }
		
		  if($("input[name=vcFindWithTrf]").attr('checked')){
			   searchKey.with_trnf = "true";
		  } else {
			   searchKey.with_trnf = "false";
		  }
		  
          var cd = "";
          if($("input[name=vcCD1]").attr("checked"))
            cd = cd + $("input[name=vcCD1]").val();
          if($("input[name=vcCD2]").attr("checked"))
            cd = cd + $("input[name=vcCD2]").val();
          if($("input[name=vcCD3]").attr("checked"))
            cd = cd + $("input[name=vcCD3]").val();

          if($("input[name=vcTransf]").attr("checked")){
		  	searchKey.trfc = "yes";
		  } else {
		  	searchKey.trfc = "no";
		  }
		  
		  searchKey.trfcfr = jQuery.trim($("input[name=vcTrannfCountFr]").val());
		  searchKey.trfcto = jQuery.trim($("input[name=vcTrannfCountTo]").val());
		  		  
          var duration = ""
          var st_du_val = jQuery.trim($("input[name=vcLengthFrom]").val());
          var ed_du_val = jQuery.trim($("input[name=vcLengthTo]").val());

          if(!isBlank(st_du_val)){
              searchKey.stdu = st_du_val;
          } else {
              searchKey.stdu = "";
          }
          if(!isBlank(ed_du_val)){
              searchKey.eddu = ed_du_val;
          } else {
              searchKey.eddu = "";
          }

          if(!isBlank(cd)){
              searchKey.calld = cd;
          } else {
              searchKey.calld = "";
			  skipMsg = "Please choose call direction at least one direction.";
          }

		  return skipMsg;
      }

      function searchVoice(){
          var skipMsg = getSearchKeys();
          if(skipMsg == true){
		  	
	          progressEnabled(true);
	          
	          $("#mytable tbody").html("");
	
	          onVoiceReset(0);
	          vc_start = true;	
			  		
	          $.ajax({ url: "<%= url_for(:controller => 'voice_logs',:action => 'search_voice_log') %>",
	          type: "POST",
	          data:
	          {
	              keys: searchKey.keys,
                agents: searchKey.agents,
                groups: searchKey.groups,
	              periods: searchKey.periods,
	              stdate: searchKey.stdate,
	              sttime: searchKey.sttime,
	              eddate: searchKey.eddate,
	              edtime: searchKey.edtime,
	              ext: searchKey.ext,
	              agent_id: searchKey.agent_id,
	              calld: searchKey.calld,
	              caller: searchKey.caller,
	              dialed: searchKey.dialed,
								trfc: searchKey.trfc,
	              stdur: searchKey.stdu,
	              eddur: searchKey.eddu,
								trfcfr: searchKey.trfcfr,
								trfcto: searchKey.trfcto,
								keyword: searchKey.keyword,
	              page: ctrlPage.selectPage,
								perpage: ctrlPage.perPage,
	              sortby: ctrlSort.colName,
	              od: ctrlSort.order,
								withtrnf: searchKey.with_trnf
	          },
	          dataType: "json",
	          success: function(data){
	              vc_start = false;
	              loadDataTable(data);
	              VLloadTimeLine();
	          }});		  	
		  } else {
		  	vc_start = false;
			alert(skipMsg);
		  }
      }

      function VLloadTimeLine(){
          var srcUrl = "";
          $.each(searchKey,function(key){
            srcUrl += key + "=" + searchKey[key] + "&";
          });
          initial_vl_timeline(srcUrl);
      }
			function phoneNumberValid(){
				$(".phonefmt").keydown(function(){
					var o = $(this);
					var p = o.val().toString().replace(/[^0-9\#\*]/g,'');
					o.val(p);
				}).keyup(function(){
					var o = $(this);
					var p = o.val().toString().replace(/[^0-9\#\*]/g,'');
					o.val(p);
				});
			}
      function onLoadCond(){
          $("input[name=vcCD1]").attr("checked","checked");
          $("input[name=vcCD2]").attr("checked","checked");
          $("input[name=vcCD3]").attr("checked","checked");
      }

      function onbtnSearch(){
          onSearchVoice('all');
      }

      function onbtnReset(){
          onLoadCond();
		  try {
	          $("input[name=vcFromDate]").val("");
	          $("input[name=vcFromTime]").val("");
	          $("input[name=vcToDate]").val("");
	          $("input[name=vcToTime]").val("");
	          $("input[name=vcExt]").val("");
	          $("input[name=agent_name]").val(""); // nkm 
	          $("input[name=agent_id]").val(""); // nkm 
	          $("input[name=vcLengthFrom]").val("");
	          $("input[name=vcLengthTo]").val("");
	          $("input[name=vcCaller]").val("");
	          $("input[name=vcDialed]").val("");
						$("input[name=vcTransfCountFr]").val("");
						$("input[name=vcTransfCountTo]").val("");		  	
		  } catch(e) {}
      }
	
	$(document).ready(function(){
		//onLoadCond();
		$(".chk-direction").buttonset();
		$(".chk-call-transfered").buttonset();
		
		$("#vcPeriods").change(function(){
			var period_selt = $("#vcPeriods option:selected").val();
			if(period_selt == 0){
				if(($("input[name=vcFromTime]").val()).length == 0)
					$("input[name=vcFromTime]").val("00:00");
				if(($("input[name=vcToTime]").val()).length == 0)
					$("input[name=vcToTime]").val("23:59");
				if(($("input[name=vcFromDate]").val()).length == 0)
					$("input[name=vcFromDate]").val("<%=Date.today %>");
				if(($("input[name=vcToDate]").val()).length == 0)
					$("input[name=vcToDate]").val("<%=Date.today %>");
				$("#custom-periods").css("display","block");
			} else {
				$("#custom-periods").css("display","none");
			}
			resizeWindow();  
		});
		
		$(".callDur").click(function(){
			var o = $(this);
			o.val(o.val().replace(/:/g,""));
			o.select();
		});
		
		$(".callTime").click(function(){
			$(this).select();
		});
		
		$("#vcFromDate").datepicker({ showAnim: null,duration: 0, dateFormat: 'yy-mm-dd' });
		$("#vcToDate").datepicker({  showAnim: null,duration: 0, dateFormat: 'yy-mm-dd' });
		$(".callTime").mask("99:99");
		$("input[name=vcFromDate]").mask("9999-99-99");
		$("input[name=vcToDate]").mask("9999-99-99");
		$("input[name=vcExt]").mask("9999");
		$(".input-int-only").numeric();
		phoneNumberValid();
		
		$(".callDur").blur(function(){
			var t = $(this);
			var a = jQuery.trim(t.val());
			a = a.replace(":","");
			if(a.length==1){
				t.val("0" + a + ":00");
			} else if(a.length == 2){
				t.val(a + ":00");
			} else if(a.length == 3){
				t.val(a + ":00");				
			} else if(a.length >= 4){
				var b = a.substring(0,3);
				var c = a.substring(3);
				if(c.length==1){
					c = c + "0";
				}
				t.val(b + ":" + c);
			}
		});
		
		$("#keyword_name").autocomplete("<%=url_for(:controller => 'keywords',:action => 'autocomplete_list') %>", {
			width: 190,
			multiple: true,
			matchContains: true,
			multipleSeparator: " "
		});
		
  });
</script>
    
<% end %>
<div id="tab-conds">
  <div align="right" id="div-button" width="100%">
    <input type="button" value="Search" class="btnConditions" onclick="onbtnSearch()" name="btnSearch" id="btnSearch">
    <input type="button" value="Clear" class="btnConditions" onclick="onbtnReset()" name="btnSearch" id="btnClear"> 
	  &nbsp;<a href="#" onclick="ShowOrHidePanel()" title="Hide"><%=image_tag('hide_panel2.png',{:border => 0}) %></a>
  </div> 
  <div class="condStyle1"> 
    <span class="condName1">Period:</span>
    <select name="vcPeriods" id="vcPeriods">
      <option value="1" <%= ((@conds == false) ? "selected" : "") %>>Today</option>
      <option value="2">Yesterday</option>
      <option value="11">7 days ago</option>
      <option value="9">30 days ago</option>
      <option value="3">This week</option>
      <option value="4">Last week</option>
      <option value="5">This month</option>
      <option value="6">Last month</option>
	    <option value="9">1 month ago</option>
      <option value="10">6 months ago</option>		  
    <!--  <option value="7">This year</option> -->
    <!--  <option value="8">All</option> -->
      <option value="0" <%= ((@conds != false) ? "selected" : "") %>>Custom ...</option>
    </select>
    <div id="custom-periods">
    <div class="condStyle1">
        <span class="condName1">Date/Time from:</span>
        <input type="text" name="vcFromDate" id="vcFromDate" title="yyyy-mm-dd">
        <input type="text" alt="time" value="00:00" name="vcFromTime" id="vcFromTime" maxlength="5" class="callTime" title="hh:mm">
    </div>
    <div class="condStyle1">
        <span class="condName1">Date/Time to:</span>
        <input type="text" name="vcToDate" id="vcToDate" title="yyyy-mm-dd">
        <input type="text" name="vcToTime" value="23:59" maxlength="5" id="vcToTime" class="callTime" title="hh:mm">
    </div>
    <span class="frm-note"><i>Format date: yyyy-mm-dd, Time: hh:mm</i></span>
    </div>
  </div>
  <div class="condStyle1">
    <table cellspacing="0" cellpadding="0" width="100%">
        <tr>
          <td><span class="condName1">Caller:</span></td>
          <td><span class="condName1">Dialed:</span></td>
          <td><span class="condName1">Ext:</span></td>
        </tr>
        <tr>
          <td><input type="text" name="vcCaller" id="vcCaller" class="phone phonefmt" maxlength="20" title="Caller number"></td>
          <td><input type="text" name="vcDialed" id="vcDialed" class="phone phonefmt" maxlength="20" title="Dialed number"></td>
          <td><input type="text" name="vcExt" class="input-int-only" id="vcExt" title="Extension number"></td>
        </tr>
    </table>
  </div>
  <div class="condStyle1" >
  	<span class="condName1">Agent Name:</span>	 
		<input type="text" name="agent_name" maxlength="100" id="agent_name" >
		<input type="hidden" name="agent_id" maxlength="100" id="agent_id" >
  </div>
<script type="text/javascript">
<% @agent_pattern = User.alive.select('display_name, id').where('flag = 0').order('display_name asc') %>
var agent_pattern = [ <%= (@agent_pattern.to_a.map { |k| "{id: '#{k.id}', display_name: '#{k.display_name.strip}'}"}).join(',') %> ];

  function buildAgentPattern(){
    $('#agent_name').autocomplete(agent_pattern ,{
      minChars: 0,
      autoFill: true,
      mustMatch: true,
      matchContains: false,
      scroll: true,
      scrollHeight: 100,
      formatItem: function(item) {
        return item.display_name;
      }
    }).result(function(event, data, formatted) {
      if (data) {
	$('#agent_id').val(data.id)
      }
    }).blur(function(){

    });
  }
buildAgentPattern();
</script>
  <div class="condStyle1">
    <span class="condName1">Call Duration (mmm:ss):</span>
    <input type="text" name="vcLengthFrom" id="vcLengthStart" class="input-int-only callDur" value="" maxlength="5" title="mmm:ss"><label class="label-frm"> <span class="condName1" style="display:inline;">To</span> </label><input type="text" class="callDur input-int-only" name="vcLengthTo" id="vcLengthEnd" maxlength="5" title="mm:ss" value="">
  </div>
  <div class="condStyle1">
    <span class="condName1">Call Direction:</span>
	<div class="chk-direction">
	<% if @conds == false %>
	    <input type="checkbox" name="vcCD1" id="vcCD1" value="i" checked> <label for="vcCD1" class="vcCD">In</label>
	    <input type="checkbox" name="vcCD2" id="vcCD2" value="o" checked> <label for="vcCD2" class="vcCD">Out</label>		
	<% else %>
	    <input type="checkbox" name="vcCD1" id="vcCD1" value="i" <%= ((@conds[:cd].nil? or @conds[:cd] == 'i') ? "checked" : "") %>> <label for="vcCD1" class="vcCD">In</label>
	    <input type="checkbox" name="vcCD2" id="vcCD2" value="o" <%= ((@conds[:cd].nil? or @conds[:cd] == 'o') ? "checked" : "") %>> <label for="vcCD2" class="vcCD">Out</label>	
	<% end %>
    <input type="checkbox" name="vcCD3" id="vcCD3" value="e" checked> <label for="vcCD3" class="vcCD">Other</label>
    </div>
  </div>
  <div class="condStyle1" style="<%= 'display:none;' if not Aohs::MOD_CALL_TRANSFER %>">
    <span class="condName1">Number of transfered calls:</span>
	<input type="text" class="input-int-only" name="vcTrannfCountFr" id="vcTransfCountFr" maxlength="2" value="">&nbsp;<span class="condName1" style="display:inline;">To</span>&nbsp;<input type="text" class="input-int-only" name="vcTrannfCountTo" id="vcTransfCountTo" maxlength="2" value=""></span>
  <span class="condName1" style="display:none;"><input type="checkbox" name="vcFindWithTrf" id="vcFindWithTrf" value="yes">&nbsp;Find Transferred calls.</span>
  </div>
  <div class="condStyle1" style="<%= 'display:none;' if not Aohs::MOD_KEYWORDS %>">
  	<span class="condName1">Keyword:</span>	 
	<input type="text" name="keyword_name" maxlength="100" id="keyword_name" title="For each words separated by space">
  </div>
</div>
<div id="tab-tree">
   <div id="agent_tree"><%= render :partial => "/shared/group_and_agents_tree" %></div>
</div>